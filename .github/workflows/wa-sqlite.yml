# This is a basic workflow that is manually triggered

name: wa-sqlite workflow

on:
  workflow_dispatch:
    inputs:
      sqlite_tag:
        description: 'SQLite source tree tag'
        default: 'version-3.50.0'
        required: true
        type: string

      em_version:
        description: 'EMSDK version'
        default: '4.0.8'
        required: true
        type: string

      make_args:
        description: 'make arguments'
        default: 'WASQLITE_EXTRA_DEFINES="-DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_UPDATE_DELETE_LIMIT"'
        required: false
        type: string
        
env:
  EM_CACHE_FOLDER: 'emsdk-cache'
  GH_TOKEN: ${{ github.token }}
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: overlay.wa-sqlite
    
    # Install EMSDK
    - name: Setup Emscripten
      id: cache-system-libraries
      uses: actions/cache@v3
      with:
        path: ${{env.EM_CACHE_FOLDER}}
        key: ${{inputs.em_version}}-${{runner.os}}
    - uses: mymindstorm/setup-emsdk@v14
      with:
        version: ${{inputs.em_version}}
        actions-cache-folder: ${{env.EM_CACHE_FOLDER}}
    - run: emcc -v

    # Check out wa-sqlite
    - name: Check out wa-sqlite
      run: git clone https://github.com/rhashimoto/wa-sqlite.git

    # Overlay files.
    - run: tar -C overlay.wa-sqlite -cf - . | tar -C wa-sqlite -xvf -
    
    # Build
    - name: Build wa-sqlite
      working-directory: ./wa-sqlite
      run: |
        EMFLAGS_EXTRA='-sEXPORTED_RUNTIME_METHODS=HEAPU8,HEAPU32,HEAP32' make ${{inputs.make_args}} SQLITE_VERSION=${{inputs.sqlite_tag}}
        (cd dist; tar czf ../wa-sqlite.dist.tgz .)

    # Package
    - name: Create release
      run: |
        echo "wa-sqlite build `date`" >> NOTES
        echo "SQLite ${{inputs.sqlite_tag}}" >> NOTES
        echo "EMSDK ${{inputs.em_version}}" >> NOTES
        echo "${{inputs.make_args}}" >> NOTES
        gh release create "v`date +%s`" wa-sqlite/*.tgz --generate-notes --notes-file NOTES
